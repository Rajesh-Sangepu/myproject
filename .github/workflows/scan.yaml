name: Security & Code Scan on PR

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:

  # ----------------------
  # Trivy Secret Scan
  # ----------------------
  trivy-secret-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Run Trivy secret scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scanners: secret
          format: table
          exit-code: '1'
          ignore-unfixed: false

  # ----------------------
  # Trivy Vulnerability Scan
  # ----------------------
  trivy-vuln-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Run Trivy repo scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: repo
          format: sarif
          output: trivy-results.sarif
          exit-code: '1'
          ignore-unfixed: false
          severity: LOW,MEDIUM,HIGH,CRITICAL

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

  # ----------------------
  # Python Code Scan
  # ----------------------
  python-code-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Find Python files
        id: check-python
        run: |
          shopt -s globstar
          if ls **/*.py 1> /dev/null 2>&1; then
            echo "python_found=true" >> $GITHUB_ENV
          else
            echo "python_found=false" >> $GITHUB_ENV
          fi

      - name: Install Flake8 & Bandit
        if: env.python_found == 'true'
        run: pip install flake8 bandit

      - name: Run Flake8 linting (ignore blank lines)
        if: env.python_found == 'true'
        run: flake8 . --ignore=E302,E305,W391

      - name: Run Bandit security scan
        if: env.python_found == 'true'
        run: bandit -r . -f sarif -o bandit-results.sarif || true

      - name: Upload Bandit results to GitHub Security
        if: env.python_found == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: bandit-results.sarif

  # ----------------------
  # Java Code Scan (SpotBugs)
  # ----------------------
  java-code-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Check for Java files
        id: check-java
        run: |
          if find . -name "*.java" | grep -q .; then
            echo "java_found=true" >> $GITHUB_ENV
          else
            echo "java_found=false" >> $GITHUB_ENV
          fi

      - name: Setup JDK
        if: env.java_found == 'true'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven & run SpotBugs
        if: env.java_found == 'true'
        run: |
          mvn -B package spotbugs:spotbugs || true
          cp target/spotbugsXml.xml target/spotbugs.sarif || true

      - name: Upload SpotBugs results to GitHub Security
        if: env.java_found == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: target/spotbugs.sarif

  # ----------------------
  # Dependency-Check (Maven)
  # ----------------------
  dependency-check:
    runs-on: ubuntu-latest
    env:
      NVD_API_KEY: ${{ secrets.NVD_API_KEY || '' }}
    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install OWASP Dependency-Check
        run: |
          curl -L -o dependency-check.zip https://github.com/jeremylong/DependencyCheck/releases/download/v8.3.1/dependency-check-8.3.1-release.zip
          unzip dependency-check.zip -d dependency-check

      - name: Run Dependency-Check
        run: |
          API_ARG=""
          if [ -n "$NVD_API_KEY" ]; then
            API_ARG="--nvdApiKey $NVD_API_KEY"
          fi
          ./dependency-check/dependency-check/bin/dependency-check.sh \
            --project "My Maven Project" \
            --scan . \
            --format "SARIF" \
            --out dependency-check-report \
            $API_ARG \
            --cveValidForHours 24 \
            --noupdate || true

      - name: Upload Dependency-Check results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: dependency-check-report/dependency-check-report.sarif

  # ----------------------
  # Security Summary & Combined Report
  # ----------------------
  security-summary:
    runs-on: ubuntu-latest
    needs: [trivy-vuln-scan, python-code-scan, dependency-check, java-code-scan]
    steps:
      - name: Collect results summary
        run: |
          echo "## 🔐 Security Scan Summary" >> $GITHUB_STEP_SUMMARY

          summarize_sarif() {
            file=$1
            name=$2
            if [ -f "$file" ]; then
              total=$(jq '.runs[0].results | length' "$file")
              low=$(jq '[.runs[0].results[] | select(.properties.severity=="LOW")] | length' "$file")
              med=$(jq '[.runs[0].results[] | select(.properties.severity=="MEDIUM")] | length' "$file")
              high=$(jq '[.runs[0].results[] | select(.properties.severity=="HIGH")] | length' "$file")
              crit=$(jq '[.runs[0].results[] | select(.properties.severity=="CRITICAL")] | length' "$file")
              echo "- **$name:** $total issues (LOW=$low, MEDIUM=$med, HIGH=$high, CRITICAL=$crit)" >> $GITHUB_STEP_SUMMARY
            else
              echo "- **$name:** Skipped" >> $GITHUB_STEP_SUMMARY
            fi
          }

          summarize_sarif trivy-results.sarif "Trivy Vulnerabilities"
          summarize_sarif bandit-results.sarif "Python Bandit Issues"
          summarize_sarif dependency-check-report/dependency-check-report.sarif "Dependency-Check Issues"
          summarize_sarif target/spotbugs.sarif "Java SpotBugs Issues"

      - name: Merge SARIF reports
        run: |
          files=()
          for f in trivy-results.sarif bandit-results.sarif dependency-check-report/dependency-check-report.sarif target/spotbugs.sarif; do
            [ -f "$f" ] && files+=("$f")
          done

          if [ ${#files[@]} -gt 0 ]; then
            jq -s '{
              "version": "2.1.0",
              "runs": (.[].runs | add)
            }' "${files[@]}" > combined-security-report.sarif
          else
            echo '{"version":"2.1.0","runs":[]}' > combined-security-report.sarif
          fi

      - name: Upload combined SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: combined-security-report.sarif

      - name: Upload combined SARIF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: combined-security-report
          path: combined-security-report.sarif
